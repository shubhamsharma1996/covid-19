{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","Images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","countryData","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","props","fetchedData","setState","state","this","src","coronaImage","corona","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d582b13b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core'\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) =>{\n    console.log(\"data\",confirmed)\n    if(!confirmed){\n        return \"loading...\"\n    }\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\" >\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            /></Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\"><CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            /></Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\"><CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            /></Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of death caused by covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) =>{\n    let changeableUrl = url;\n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n  try {\n      // first type to destructure data===== \n\n      const {data :{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\n      return {confirmed,recovered,deaths,lastUpdate}\n\n    //  second type to destructure data \n    //   const {data} =  await axios.get(url);\n    //       const modiFiedData = {\n    //           confirmed:data.confirmed,\n    //           revovered:data.revovered,\n    //           deaths:data.deaths,\n    //           lastUpdate:data.lastUpdate\n    //       }\n    //       return modiFiedData\n      \n  }\n  catch(error){\n\n  };\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData)=>({\n            confirmed:dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date:dailyData.reportDate\n        }))\n        return modifiedData\n        \n    }catch(error){\n\n    }\n}\n\nexport const fetchCountries = async () =>{\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        const countryData = countries.map((country)=>country.name)\n        return countryData\n    }catch(error){\n        console.log(error);\n        \n    }\n}","import React,{useState,useEffect} from 'react'\nimport {fetchDailyData} from '../../api'\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css'\nconst Chart = ({data:{confirmed,recovered,deaths},country}) =>{\n    const [dailyData, setDailyData]= useState([]);\n\n    useEffect (()=>{\n        const fetchApi = async () =>{\n            setDailyData( await fetchDailyData());\n        }\n\n        fetchApi();\n        \n    },[])\n\n    const lineChart = (\n      dailyData.length \n      ?(\n       <Line \n        data= {{\n            labels:dailyData.map(({date})=>date),\n            datasets:[{\n                data:dailyData.map(({confirmed})=>confirmed),\n                label:'Infected',\n                borderColor:'#3333ff',\n                fill:true\n            },\n            {\n                data:dailyData.map(({deaths})=>deaths),\n                label:'Deaths',\n                borderColor:'red',\n                backgroundColor:'rgba(255,0,0,0.5)',\n                fill:true\n            }],\n        }}\n       />) : null \n    )\n        \n    const barChart = (\n        confirmed \n        ? (\n            <Bar\n                data={{\n                    labels: ['Infected','Recovered','Deaths'],\n                    datasets:[{\n                        label:'People',\n                        backgroundColor:['rgba(0,0,255,0.5)',\n                        'rgba(0,255,0,0.5)',\n                        'rgba(255,0,0,0.5)'],\n                        data:[confirmed.value,recovered.value,deaths.value]\n                    }],\n                }}\n                options = {{\n                    legend:{display:false},\n                    title:{display:true,text:`Current state in ${country}`},\n                }}\n            />\n\n        ):null\n    )\n    \n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, {useState,useEffect} from 'react'\nimport {NativeSelect,FormControl, StylesProvider} from '@material-ui/core'\nimport styles from './CountryPicker.module.css';\nimport {fetchCountries} from '../../api'\nconst CountryPicker = ({handleCountryChange}) =>{\n    const [fetchedCountries, setFetchedCountries] = useState([])\n\n    useEffect(()=> {\n        const fetchApi = async () =>{\n            setFetchedCountries(await fetchCountries())\n        }\n\n        fetchApi();\n    },[setFetchedCountries]);\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                \n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i)=>\n                    <option key={i} value={country}>{country}</option>\n                )}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react'\nimport styles from './App.module.css';\nimport {Cards, Chart, CountryPicker} from './components'\nimport {fetchData} from './api';\nimport coronaImage from './Images/image.png'\nclass App extends React.Component{\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             data:{},\n             country:''\n        }\n    }\n    \n  \n\n    async componentDidMount (){\n        const fetchedData = await fetchData();\n\n        this.setState({data:fetchedData})\n\n        console.log(\"reponse\",this.state.data)\n    }\n\n    handleCountryChange =  async (country) =>{\n        const fetchedData = await fetchData(country);\n        this.setState({\n            country:country,\n            data:fetchedData})\n    }\n    render(){\n        const {data,country} = this.state\n        return(\n            <div className={styles.container}>\n                <img src={coronaImage} className={styles.corona} alt='Covid-19'/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\nexport default App;","import React from  'react'\nimport ReactDom from 'react-dom'\n\nimport App from './App';\n ReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"corona\":\"App_corona__3dVEl\",\"safe\":\"App_safe__I8e1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}